from aiogram import Bot, Dispatcher, executor, types
import qrcode
from io import BytesIO

API_TOKEN = '8179686973:AAFP5po5GJW4mK1pfX4Yy9wLj6Axb1OMTcM'
OWNER_USERNAME = 'Akuma_hkmv'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç, –º–æ–π —é–Ω—ã–π –¥—Ä—É–≥...\n"
        "–Ø –≥–ª–∞–≤–∞ –∫–ª–∞–Ω–∞ Mavrodi, –∏ –º–æ–π –ø—Å–µ–≤–¥–æ–Ω–∏–º ‚Äî —Ç–∞—Ç—É.\n\n"
        "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –∫–∏–±–µ—Ä‚Äë–∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫–ª–∏–Ω–∫–æ–º –ø—Ä–∞–≤–æ—Å—É–¥–∏—è.\n"
        "–ú—ã ‚Äî –∫–ª–∞–Ω –±–µ–ª—ã—Ö —Ö–∞–∫–µ—Ä–æ–≤, –∑–∞–Ω–∏–º–∞–µ–º—Å—è –≥–∏–≥–∏–µ–Ω–æ–π —Å–µ—Ç–µ–π –∏ –æ—á–∏—Å—Ç–∫–æ–π –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–≥–æ –ü–û.\n"
        "–í–∫—Ä–∞—Ç—Ü–µ: –º—ã ‚Äî —Å–∞–Ω–∏—Ç–∞—Ä—ã –ø–∞—É—Ç–∏–Ω—ã.\n\n"
        "–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ‚Äî —è —Å—Ä–∞–∑—É –æ—Ç–≤–µ—á—É."
    )
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton("üß† –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", url=f"https://t.me/{OWNER_USERNAME}"))
    kb.add(types.InlineKeyboardButton("üì¶ –°–æ–∑–¥–∞—Ç—å QR", callback_data="make_qr"))
    await message.answer(text, reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data == 'make_qr')
async def qr_request(call: types.CallbackQuery):
    await call.answer("–û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª–∫—É ‚Äî —è —Å–æ–∑–¥–∞–º QR‚Äë–∫–æ–¥.")
    dp.register_message_handler(generate_qr, state=None)

async def generate_qr(message: types.Message):
    text = message.text
    img = qrcode.make(text)
    bio = BytesIO()
    img.save(bio, 'PNG')
    bio.name = 'qr.png'
    bio.seek(0)
    caption = "–°–æ–∑–¥–∞–Ω Mavrodi_Team, –≥–ª–∞–≤–æ–π –∫–ª–∞–Ω–∞ –¢–ê–¢–£"
    await message.reply_photo(photo=bio, caption=caption)
    dp.unregister_message_handler(generate_qr)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
